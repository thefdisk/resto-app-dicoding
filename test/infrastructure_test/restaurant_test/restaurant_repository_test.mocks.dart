// Mocks generated by Mockito 5.3.2 from annotations
// in resto_app_dicoding/test/infrastructure_test/restaurant_test/restaurant_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i7;
import 'package:data_channel/data_channel.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:resto_app_dicoding/domain/restaurant/restaurant_failure.dart'
    as _i5;
import 'package:resto_app_dicoding/infrastructure/restaurant/data_sources/remote_data_provider.dart'
    as _i3;
import 'package:resto_app_dicoding/infrastructure/restaurant/restaurant_dtos.dart'
    as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDC_0<Error, Data> extends _i1.SmartFake
    implements _i2.DC<Error, Data> {
  _FakeDC_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RestaurantRemoteDataProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockRestaurantRemoteDataProvider extends _i1.Mock
    implements _i3.RestaurantRemoteDataProvider {
  MockRestaurantRemoteDataProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.DC<_i5.RestaurantFailure, List<_i6.RestaurantDto>>>
      fetchRestaurants() => (super.noSuchMethod(
            Invocation.method(
              #fetchRestaurants,
              [],
            ),
            returnValue: _i4.Future<
                    _i2.DC<_i5.RestaurantFailure,
                        List<_i6.RestaurantDto>>>.value(
                _FakeDC_0<_i5.RestaurantFailure, List<_i6.RestaurantDto>>(
              this,
              Invocation.method(
                #fetchRestaurants,
                [],
              ),
            )),
          ) as _i4
              .Future<_i2.DC<_i5.RestaurantFailure, List<_i6.RestaurantDto>>>);
  @override
  _i4.Future<
      _i2.DC<_i5.RestaurantFailure, _i6.RestaurantDto>> fetchDetailRestaurant(
          {required String? restaurantId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchDetailRestaurant,
          [],
          {#restaurantId: restaurantId},
        ),
        returnValue:
            _i4.Future<_i2.DC<_i5.RestaurantFailure, _i6.RestaurantDto>>.value(
                _FakeDC_0<_i5.RestaurantFailure, _i6.RestaurantDto>(
          this,
          Invocation.method(
            #fetchDetailRestaurant,
            [],
            {#restaurantId: restaurantId},
          ),
        )),
      ) as _i4.Future<_i2.DC<_i5.RestaurantFailure, _i6.RestaurantDto>>);
  @override
  _i4.Future<
      _i2.DC<_i5.RestaurantFailure, List<_i6.RestaurantDto>>> searchRestaurants(
          {required String? keyword}) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchRestaurants,
          [],
          {#keyword: keyword},
        ),
        returnValue: _i4.Future<
                _i2.DC<_i5.RestaurantFailure, List<_i6.RestaurantDto>>>.value(
            _FakeDC_0<_i5.RestaurantFailure, List<_i6.RestaurantDto>>(
          this,
          Invocation.method(
            #searchRestaurants,
            [],
            {#keyword: keyword},
          ),
        )),
      ) as _i4.Future<_i2.DC<_i5.RestaurantFailure, List<_i6.RestaurantDto>>>);
  @override
  _i4.Future<_i2.DC<_i5.RestaurantFailure, _i7.Unit>> postRestaurantReview({
    required String? restaurantId,
    required String? name,
    required String? review,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postRestaurantReview,
          [],
          {
            #restaurantId: restaurantId,
            #name: name,
            #review: review,
          },
        ),
        returnValue: _i4.Future<_i2.DC<_i5.RestaurantFailure, _i7.Unit>>.value(
            _FakeDC_0<_i5.RestaurantFailure, _i7.Unit>(
          this,
          Invocation.method(
            #postRestaurantReview,
            [],
            {
              #restaurantId: restaurantId,
              #name: name,
              #review: review,
            },
          ),
        )),
      ) as _i4.Future<_i2.DC<_i5.RestaurantFailure, _i7.Unit>>);
}
